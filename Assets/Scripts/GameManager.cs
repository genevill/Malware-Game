using UnityEngine;
using UnityEngine.SceneManagement;
#if UNITY_EDITOR
using UnityEditor;
#endif
using TMPro;

public class GameManager : MonoBehaviour
{
    public GameObject startGame;
    public GameObject gameOver;
    public GameObject gameUI;
    public GameObject pause;
    public TMP_Text scoreText;
    public TMP_Text highScoreText;
    public TMP_Text easyDifficultyText;
    public TMP_Text hardDifficultyText;
    private PlayerScriptableObject playerSO_Easy;
    private PlayerScriptableObject playerSO_Hard;
    private int playerScore;
    private bool isPaused = false;

    void Start()
    {
        playerSO_Easy = Resources.Load<PlayerScriptableObject>("PlayerSO_Easy");
        playerSO_Hard = Resources.Load<PlayerScriptableObject>("PlayerSO_Hard");
        startGame.SetActive(true);
        gameUI.SetActive(false);
        gameOver.SetActive(false);
        pause.SetActive(false);
        UpdateHighScore();
        if (!PlayerClass.gameStart)
        {
            startGame.SetActive(false);
            gameUI.SetActive(true);
        }
    }

    private void Update()
    {
        if (!PlayerClass.gameStart && !isPaused && Input.GetKeyDown(KeyCode.Escape))
            Pause();
        else if (!PlayerClass.gameStart && isPaused && Input.GetKeyDown(KeyCode.Escape))
            Unpause();
    }
    public void GameOver()
    {
        if (!startGame.activeInHierarchy)
        {
            gameOver.SetActive(true);
            Time.timeScale = 0;
            PlayerPrefs.SetInt("High Score", playerScore);
            PlayerPrefs.Save();
        }
    }

    public void Restart()
    {
        PlayerClass.gameStart = true;
        Time.timeScale = 1;
        SceneManager.LoadScene(SceneManager.GetActiveScene().name);
    }

    public void StartGame()
    {
        PlayerClass.gameStart = false;
        SceneManager.LoadScene(SceneManager.GetActiveScene().name);
    }

    public void UpdateScore(int score)
    {
        playerScore = score;
        scoreText.text = "Score: " + score;
    }

    public void UpdateHighScore()
    {
        int score = PlayerPrefs.GetInt("High Score", 0);
        highScoreText.text = "High Score: " + score;
    }
    public void ResetHighScore()
    {
        PlayerPrefs.SetInt("High Score", 0);
        PlayerPrefs.Save();
        UpdateHighScore();
    }

    public void SetEasyDifficulty()
    {

        PlayerClass.playerDefaults = playerSO_Easy;
        easyDifficultyText.fontStyle = FontStyles.Underline;
        hardDifficultyText.fontStyle = FontStyles.Normal;

    }

    public void SetHardDifficulty()
    {
        PlayerClass.playerDefaults = playerSO_Hard;
        hardDifficultyText.fontStyle = FontStyles.Underline;
        easyDifficultyText.fontStyle = FontStyles.Normal;
    }

    public void Pause()
    {
        pause.SetActive(true);
        Time.timeScale = 0;
        isPaused = true;
    }
    public void Unpause()
    {
        pause.SetActive(false);
        Time.timeScale = 1;
        isPaused = false;
    }

    public void Quit()
    {
        #if UNITY_EDITOR
            UnityEditor.EditorApplication.isPlaying = false;
        #else
            Application.Quit();
        #endif
    }
}
